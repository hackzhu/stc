                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.0 #11528 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _keyscan
                                     13 	.globl _TF2
                                     14 	.globl _EXF2
                                     15 	.globl _RCLK
                                     16 	.globl _TCLK
                                     17 	.globl _EXEN2
                                     18 	.globl _TR2
                                     19 	.globl _C_T2
                                     20 	.globl _CP_RL2
                                     21 	.globl _T2CON_7
                                     22 	.globl _T2CON_6
                                     23 	.globl _T2CON_5
                                     24 	.globl _T2CON_4
                                     25 	.globl _T2CON_3
                                     26 	.globl _T2CON_2
                                     27 	.globl _T2CON_1
                                     28 	.globl _T2CON_0
                                     29 	.globl _PT2
                                     30 	.globl _ET2
                                     31 	.globl _CY
                                     32 	.globl _AC
                                     33 	.globl _F0
                                     34 	.globl _RS1
                                     35 	.globl _RS0
                                     36 	.globl _OV
                                     37 	.globl _F1
                                     38 	.globl _P
                                     39 	.globl _PS
                                     40 	.globl _PT1
                                     41 	.globl _PX1
                                     42 	.globl _PT0
                                     43 	.globl _PX0
                                     44 	.globl _RD
                                     45 	.globl _WR
                                     46 	.globl _T1
                                     47 	.globl _T0
                                     48 	.globl _INT1
                                     49 	.globl _INT0
                                     50 	.globl _TXD
                                     51 	.globl _RXD
                                     52 	.globl _P3_7
                                     53 	.globl _P3_6
                                     54 	.globl _P3_5
                                     55 	.globl _P3_4
                                     56 	.globl _P3_3
                                     57 	.globl _P3_2
                                     58 	.globl _P3_1
                                     59 	.globl _P3_0
                                     60 	.globl _EA
                                     61 	.globl _ES
                                     62 	.globl _ET1
                                     63 	.globl _EX1
                                     64 	.globl _ET0
                                     65 	.globl _EX0
                                     66 	.globl _P2_7
                                     67 	.globl _P2_6
                                     68 	.globl _P2_5
                                     69 	.globl _P2_4
                                     70 	.globl _P2_3
                                     71 	.globl _P2_2
                                     72 	.globl _P2_1
                                     73 	.globl _P2_0
                                     74 	.globl _SM0
                                     75 	.globl _SM1
                                     76 	.globl _SM2
                                     77 	.globl _REN
                                     78 	.globl _TB8
                                     79 	.globl _RB8
                                     80 	.globl _TI
                                     81 	.globl _RI
                                     82 	.globl _P1_7
                                     83 	.globl _P1_6
                                     84 	.globl _P1_5
                                     85 	.globl _P1_4
                                     86 	.globl _P1_3
                                     87 	.globl _P1_2
                                     88 	.globl _P1_1
                                     89 	.globl _P1_0
                                     90 	.globl _TF1
                                     91 	.globl _TR1
                                     92 	.globl _TF0
                                     93 	.globl _TR0
                                     94 	.globl _IE1
                                     95 	.globl _IT1
                                     96 	.globl _IE0
                                     97 	.globl _IT0
                                     98 	.globl _P0_7
                                     99 	.globl _P0_6
                                    100 	.globl _P0_5
                                    101 	.globl _P0_4
                                    102 	.globl _P0_3
                                    103 	.globl _P0_2
                                    104 	.globl _P0_1
                                    105 	.globl _P0_0
                                    106 	.globl _TH2
                                    107 	.globl _TL2
                                    108 	.globl _RCAP2H
                                    109 	.globl _RCAP2L
                                    110 	.globl _T2CON
                                    111 	.globl _B
                                    112 	.globl _ACC
                                    113 	.globl _PSW
                                    114 	.globl _IP
                                    115 	.globl _P3
                                    116 	.globl _IE
                                    117 	.globl _P2
                                    118 	.globl _SBUF
                                    119 	.globl _SCON
                                    120 	.globl _P1
                                    121 	.globl _TH1
                                    122 	.globl _TH0
                                    123 	.globl _TL1
                                    124 	.globl _TL0
                                    125 	.globl _TMOD
                                    126 	.globl _TCON
                                    127 	.globl _PCON
                                    128 	.globl _DPH
                                    129 	.globl _DPL
                                    130 	.globl _SP
                                    131 	.globl _P0
                                    132 	.globl _k
                                    133 ;--------------------------------------------------------
                                    134 ; special function registers
                                    135 ;--------------------------------------------------------
                                    136 	.area RSEG    (ABS,DATA)
      000000                        137 	.org 0x0000
                           000080   138 _P0	=	0x0080
                           000081   139 _SP	=	0x0081
                           000082   140 _DPL	=	0x0082
                           000083   141 _DPH	=	0x0083
                           000087   142 _PCON	=	0x0087
                           000088   143 _TCON	=	0x0088
                           000089   144 _TMOD	=	0x0089
                           00008A   145 _TL0	=	0x008a
                           00008B   146 _TL1	=	0x008b
                           00008C   147 _TH0	=	0x008c
                           00008D   148 _TH1	=	0x008d
                           000090   149 _P1	=	0x0090
                           000098   150 _SCON	=	0x0098
                           000099   151 _SBUF	=	0x0099
                           0000A0   152 _P2	=	0x00a0
                           0000A8   153 _IE	=	0x00a8
                           0000B0   154 _P3	=	0x00b0
                           0000B8   155 _IP	=	0x00b8
                           0000D0   156 _PSW	=	0x00d0
                           0000E0   157 _ACC	=	0x00e0
                           0000F0   158 _B	=	0x00f0
                           0000C8   159 _T2CON	=	0x00c8
                           0000CA   160 _RCAP2L	=	0x00ca
                           0000CB   161 _RCAP2H	=	0x00cb
                           0000CC   162 _TL2	=	0x00cc
                           0000CD   163 _TH2	=	0x00cd
                                    164 ;--------------------------------------------------------
                                    165 ; special function bits
                                    166 ;--------------------------------------------------------
                                    167 	.area RSEG    (ABS,DATA)
      000000                        168 	.org 0x0000
                           000080   169 _P0_0	=	0x0080
                           000081   170 _P0_1	=	0x0081
                           000082   171 _P0_2	=	0x0082
                           000083   172 _P0_3	=	0x0083
                           000084   173 _P0_4	=	0x0084
                           000085   174 _P0_5	=	0x0085
                           000086   175 _P0_6	=	0x0086
                           000087   176 _P0_7	=	0x0087
                           000088   177 _IT0	=	0x0088
                           000089   178 _IE0	=	0x0089
                           00008A   179 _IT1	=	0x008a
                           00008B   180 _IE1	=	0x008b
                           00008C   181 _TR0	=	0x008c
                           00008D   182 _TF0	=	0x008d
                           00008E   183 _TR1	=	0x008e
                           00008F   184 _TF1	=	0x008f
                           000090   185 _P1_0	=	0x0090
                           000091   186 _P1_1	=	0x0091
                           000092   187 _P1_2	=	0x0092
                           000093   188 _P1_3	=	0x0093
                           000094   189 _P1_4	=	0x0094
                           000095   190 _P1_5	=	0x0095
                           000096   191 _P1_6	=	0x0096
                           000097   192 _P1_7	=	0x0097
                           000098   193 _RI	=	0x0098
                           000099   194 _TI	=	0x0099
                           00009A   195 _RB8	=	0x009a
                           00009B   196 _TB8	=	0x009b
                           00009C   197 _REN	=	0x009c
                           00009D   198 _SM2	=	0x009d
                           00009E   199 _SM1	=	0x009e
                           00009F   200 _SM0	=	0x009f
                           0000A0   201 _P2_0	=	0x00a0
                           0000A1   202 _P2_1	=	0x00a1
                           0000A2   203 _P2_2	=	0x00a2
                           0000A3   204 _P2_3	=	0x00a3
                           0000A4   205 _P2_4	=	0x00a4
                           0000A5   206 _P2_5	=	0x00a5
                           0000A6   207 _P2_6	=	0x00a6
                           0000A7   208 _P2_7	=	0x00a7
                           0000A8   209 _EX0	=	0x00a8
                           0000A9   210 _ET0	=	0x00a9
                           0000AA   211 _EX1	=	0x00aa
                           0000AB   212 _ET1	=	0x00ab
                           0000AC   213 _ES	=	0x00ac
                           0000AF   214 _EA	=	0x00af
                           0000B0   215 _P3_0	=	0x00b0
                           0000B1   216 _P3_1	=	0x00b1
                           0000B2   217 _P3_2	=	0x00b2
                           0000B3   218 _P3_3	=	0x00b3
                           0000B4   219 _P3_4	=	0x00b4
                           0000B5   220 _P3_5	=	0x00b5
                           0000B6   221 _P3_6	=	0x00b6
                           0000B7   222 _P3_7	=	0x00b7
                           0000B0   223 _RXD	=	0x00b0
                           0000B1   224 _TXD	=	0x00b1
                           0000B2   225 _INT0	=	0x00b2
                           0000B3   226 _INT1	=	0x00b3
                           0000B4   227 _T0	=	0x00b4
                           0000B5   228 _T1	=	0x00b5
                           0000B6   229 _WR	=	0x00b6
                           0000B7   230 _RD	=	0x00b7
                           0000B8   231 _PX0	=	0x00b8
                           0000B9   232 _PT0	=	0x00b9
                           0000BA   233 _PX1	=	0x00ba
                           0000BB   234 _PT1	=	0x00bb
                           0000BC   235 _PS	=	0x00bc
                           0000D0   236 _P	=	0x00d0
                           0000D1   237 _F1	=	0x00d1
                           0000D2   238 _OV	=	0x00d2
                           0000D3   239 _RS0	=	0x00d3
                           0000D4   240 _RS1	=	0x00d4
                           0000D5   241 _F0	=	0x00d5
                           0000D6   242 _AC	=	0x00d6
                           0000D7   243 _CY	=	0x00d7
                           0000AD   244 _ET2	=	0x00ad
                           0000BD   245 _PT2	=	0x00bd
                           0000C8   246 _T2CON_0	=	0x00c8
                           0000C9   247 _T2CON_1	=	0x00c9
                           0000CA   248 _T2CON_2	=	0x00ca
                           0000CB   249 _T2CON_3	=	0x00cb
                           0000CC   250 _T2CON_4	=	0x00cc
                           0000CD   251 _T2CON_5	=	0x00cd
                           0000CE   252 _T2CON_6	=	0x00ce
                           0000CF   253 _T2CON_7	=	0x00cf
                           0000C8   254 _CP_RL2	=	0x00c8
                           0000C9   255 _C_T2	=	0x00c9
                           0000CA   256 _TR2	=	0x00ca
                           0000CB   257 _EXEN2	=	0x00cb
                           0000CC   258 _TCLK	=	0x00cc
                           0000CD   259 _RCLK	=	0x00cd
                           0000CE   260 _EXF2	=	0x00ce
                           0000CF   261 _TF2	=	0x00cf
                                    262 ;--------------------------------------------------------
                                    263 ; overlayable register banks
                                    264 ;--------------------------------------------------------
                                    265 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        266 	.ds 8
                                    267 ;--------------------------------------------------------
                                    268 ; internal ram data
                                    269 ;--------------------------------------------------------
                                    270 	.area DSEG    (DATA)
      000000                        271 _k::
      000000                        272 	.ds 1
                                    273 ;--------------------------------------------------------
                                    274 ; overlayable items in internal ram 
                                    275 ;--------------------------------------------------------
                                    276 	.area	OSEG    (OVR,DATA)
                                    277 ;--------------------------------------------------------
                                    278 ; Stack segment in internal ram 
                                    279 ;--------------------------------------------------------
                                    280 	.area	SSEG
      000000                        281 __start__stack:
      000000                        282 	.ds	1
                                    283 
                                    284 ;--------------------------------------------------------
                                    285 ; indirectly addressable internal ram data
                                    286 ;--------------------------------------------------------
                                    287 	.area ISEG    (DATA)
                                    288 ;--------------------------------------------------------
                                    289 ; absolute internal ram data
                                    290 ;--------------------------------------------------------
                                    291 	.area IABS    (ABS,DATA)
                                    292 	.area IABS    (ABS,DATA)
                                    293 ;--------------------------------------------------------
                                    294 ; bit data
                                    295 ;--------------------------------------------------------
                                    296 	.area BSEG    (BIT)
                                    297 ;--------------------------------------------------------
                                    298 ; paged external ram data
                                    299 ;--------------------------------------------------------
                                    300 	.area PSEG    (PAG,XDATA)
                                    301 ;--------------------------------------------------------
                                    302 ; external ram data
                                    303 ;--------------------------------------------------------
                                    304 	.area XSEG    (XDATA)
                                    305 ;--------------------------------------------------------
                                    306 ; absolute external ram data
                                    307 ;--------------------------------------------------------
                                    308 	.area XABS    (ABS,XDATA)
                                    309 ;--------------------------------------------------------
                                    310 ; external initialized ram data
                                    311 ;--------------------------------------------------------
                                    312 	.area XISEG   (XDATA)
                                    313 	.area HOME    (CODE)
                                    314 	.area GSINIT0 (CODE)
                                    315 	.area GSINIT1 (CODE)
                                    316 	.area GSINIT2 (CODE)
                                    317 	.area GSINIT3 (CODE)
                                    318 	.area GSINIT4 (CODE)
                                    319 	.area GSINIT5 (CODE)
                                    320 	.area GSINIT  (CODE)
                                    321 	.area GSFINAL (CODE)
                                    322 	.area CSEG    (CODE)
                                    323 ;--------------------------------------------------------
                                    324 ; interrupt vector 
                                    325 ;--------------------------------------------------------
                                    326 	.area HOME    (CODE)
      000000                        327 __interrupt_vect:
      000000 02r00r00         [24]  328 	ljmp	__sdcc_gsinit_startup
                                    329 ;--------------------------------------------------------
                                    330 ; global & static initialisations
                                    331 ;--------------------------------------------------------
                                    332 	.area HOME    (CODE)
                                    333 	.area GSINIT  (CODE)
                                    334 	.area GSFINAL (CODE)
                                    335 	.area GSINIT  (CODE)
                                    336 	.globl __sdcc_gsinit_startup
                                    337 	.globl __sdcc_program_startup
                                    338 	.globl __start__stack
                                    339 	.globl __mcs51_genXINIT
                                    340 	.globl __mcs51_genXRAMCLEAR
                                    341 	.globl __mcs51_genRAMCLEAR
                                    342 ;	main.c:12: unsigned char k=0;
      000000 75*00 00         [24]  343 	mov	_k,#0x00
                                    344 	.area GSFINAL (CODE)
      000000 02r00r03         [24]  345 	ljmp	__sdcc_program_startup
                                    346 ;--------------------------------------------------------
                                    347 ; Home
                                    348 ;--------------------------------------------------------
                                    349 	.area HOME    (CODE)
                                    350 	.area HOME    (CODE)
      000003                        351 __sdcc_program_startup:
      000003 02r00r7B         [24]  352 	ljmp	_main
                                    353 ;	return from main will return to caller
                                    354 ;--------------------------------------------------------
                                    355 ; code
                                    356 ;--------------------------------------------------------
                                    357 	.area CSEG    (CODE)
                                    358 ;------------------------------------------------------------
                                    359 ;Allocation info for local variables in function 'keyscan'
                                    360 ;------------------------------------------------------------
                                    361 ;i                         Allocated to registers r6 r7 
                                    362 ;------------------------------------------------------------
                                    363 ;	main.c:13: void keyscan()
                                    364 ;	-----------------------------------------
                                    365 ;	 function keyscan
                                    366 ;	-----------------------------------------
      000000                        367 _keyscan:
                           000007   368 	ar7 = 0x07
                           000006   369 	ar6 = 0x06
                           000005   370 	ar5 = 0x05
                           000004   371 	ar4 = 0x04
                           000003   372 	ar3 = 0x03
                           000002   373 	ar2 = 0x02
                           000001   374 	ar1 = 0x01
                           000000   375 	ar0 = 0x00
                                    376 ;	main.c:18: P1=0x0f;		//00001111
      000000 75 90 0F         [24]  377 	mov	_P1,#0x0f
                                    378 ;	main.c:19: if(P1!=0x0f);
      000003 E5 90            [12]  379 	mov	a,_P1
                                    380 ;	main.c:21: for(i=0;i<1000;i++);
      000005 7E E8            [12]  381 	mov	r6,#0xe8
      000007 7F 03            [12]  382 	mov	r7,#0x03
      000009                        383 00114$:
      000009 EE               [12]  384 	mov	a,r6
      00000A 24 FF            [12]  385 	add	a,#0xff
      00000C FC               [12]  386 	mov	r4,a
      00000D EF               [12]  387 	mov	a,r7
      00000E 34 FF            [12]  388 	addc	a,#0xff
      000010 FD               [12]  389 	mov	r5,a
      000011 8C 06            [24]  390 	mov	ar6,r4
      000013 8D 07            [24]  391 	mov	ar7,r5
      000015 EC               [12]  392 	mov	a,r4
      000016 4D               [12]  393 	orl	a,r5
      000017 70 F0            [24]  394 	jnz	00114$
                                    395 ;	main.c:22: if(P1!=0x0f);		//00001111 检测列
      000019 E5 90            [12]  396 	mov	a,_P1
                                    397 ;	main.c:24: switch(P1)
      00001B AF 90            [24]  398 	mov	r7,_P1
      00001D BF 07 02         [24]  399 	cjne	r7,#0x07,00158$
      000020 80 0F            [24]  400 	sjmp	00102$
      000022                        401 00158$:
      000022 BF 0B 02         [24]  402 	cjne	r7,#0x0b,00159$
      000025 80 0F            [24]  403 	sjmp	00103$
      000027                        404 00159$:
      000027 BF 0D 02         [24]  405 	cjne	r7,#0x0d,00160$
      00002A 80 0F            [24]  406 	sjmp	00104$
      00002C                        407 00160$:
                                    408 ;	main.c:26: case(0x07):k=0;break;	//00000111
      00002C BF 0E 14         [24]  409 	cjne	r7,#0x0e,00106$
      00002F 80 0F            [24]  410 	sjmp	00105$
      000031                        411 00102$:
      000031 75*00 00         [24]  412 	mov	_k,#0x00
                                    413 ;	main.c:27: case(0x0B):k=1;break;	//00001011
      000034 80 0D            [24]  414 	sjmp	00106$
      000036                        415 00103$:
      000036 75*00 01         [24]  416 	mov	_k,#0x01
                                    417 ;	main.c:28: case(0x0D):k=2;break;	//00001101
      000039 80 08            [24]  418 	sjmp	00106$
      00003B                        419 00104$:
      00003B 75*00 02         [24]  420 	mov	_k,#0x02
                                    421 ;	main.c:29: case(0x0E):k=3;break;	//00001110
      00003E 80 03            [24]  422 	sjmp	00106$
      000040                        423 00105$:
      000040 75*00 03         [24]  424 	mov	_k,#0x03
                                    425 ;	main.c:30: }
      000043                        426 00106$:
                                    427 ;	main.c:31: P1=0xf0;		//11110000 检测行
      000043 75 90 F0         [24]  428 	mov	_P1,#0xf0
                                    429 ;	main.c:32: switch(P1)
      000046 AF 90            [24]  430 	mov	r7,_P1
      000048 BF 70 02         [24]  431 	cjne	r7,#0x70,00162$
      00004B 80 2A            [24]  432 	sjmp	00111$
      00004D                        433 00162$:
      00004D BF B0 02         [24]  434 	cjne	r7,#0xb0,00163$
      000050 80 0C            [24]  435 	sjmp	00108$
      000052                        436 00163$:
      000052 BF D0 02         [24]  437 	cjne	r7,#0xd0,00164$
      000055 80 10            [24]  438 	sjmp	00109$
      000057                        439 00164$:
                                    440 ;	main.c:34: case(0x70):k+=0;break;	//01110000
      000057 BF E0 1D         [24]  441 	cjne	r7,#0xe0,00111$
      00005A 80 14            [24]  442 	sjmp	00110$
                                    443 ;	main.c:35: case(0xB0):k+=10;break;	//10110000
      00005C 80 19            [24]  444 	sjmp	00111$
      00005E                        445 00108$:
      00005E AF*00            [24]  446 	mov	r7,_k
      000060 74 0A            [12]  447 	mov	a,#0x0a
      000062 2F               [12]  448 	add	a,r7
      000063 F5*00            [12]  449 	mov	_k,a
                                    450 ;	main.c:36: case(0xD0):k+=20;break;	//11010000
      000065 80 10            [24]  451 	sjmp	00111$
      000067                        452 00109$:
      000067 AF*00            [24]  453 	mov	r7,_k
      000069 74 14            [12]  454 	mov	a,#0x14
      00006B 2F               [12]  455 	add	a,r7
      00006C F5*00            [12]  456 	mov	_k,a
                                    457 ;	main.c:37: case(0xE0):k+=30;break;	//11100000
      00006E 80 07            [24]  458 	sjmp	00111$
      000070                        459 00110$:
      000070 AF*00            [24]  460 	mov	r7,_k
      000072 74 1E            [12]  461 	mov	a,#0x1e
      000074 2F               [12]  462 	add	a,r7
      000075 F5*00            [12]  463 	mov	_k,a
                                    464 ;	main.c:38: }
      000077                        465 00111$:
                                    466 ;	main.c:40: P2=0xff;
      000077 75 A0 FF         [24]  467 	mov	_P2,#0xff
                                    468 ;	main.c:42: }
      00007A 22               [24]  469 	ret
                                    470 ;------------------------------------------------------------
                                    471 ;Allocation info for local variables in function 'main'
                                    472 ;------------------------------------------------------------
                                    473 ;	main.c:44: void main()
                                    474 ;	-----------------------------------------
                                    475 ;	 function main
                                    476 ;	-----------------------------------------
      00007B                        477 _main:
                                    478 ;	main.c:46: while(1)
      00007B                        479 00111$:
                                    480 ;	main.c:48: keyscan();
      00007B 12r00r00         [24]  481 	lcall	_keyscan
                                    482 ;	main.c:49: switch(k)				//通过相加数字来确定按键
      00007E E5*00            [12]  483 	mov	a,_k
      000080 24 F2            [12]  484 	add	a,#0xff - 0x0d
      000082 40 F7            [24]  485 	jc	00111$
      000084 E5*00            [12]  486 	mov	a,_k
      000086 24 0B            [12]  487 	add	a,#(00124$-3-.)
      000088 83               [24]  488 	movc	a,@a+pc
      000089 F5 82            [12]  489 	mov	dpl,a
      00008B E5*00            [12]  490 	mov	a,_k
      00008D 24 12            [12]  491 	add	a,#(00125$-3-.)
      00008F 83               [24]  492 	movc	a,@a+pc
      000090 F5 83            [12]  493 	mov	dph,a
      000092 E4               [12]  494 	clr	a
      000093 73               [24]  495 	jmp	@a+dptr
      000094                        496 00124$:
      000094rB0                     497 	.db	00101$
      000095rB5                     498 	.db	00102$
      000096rBA                     499 	.db	00103$
      000097rBF                     500 	.db	00104$
      000098r7B                     501 	.db	00111$
      000099r7B                     502 	.db	00111$
      00009Ar7B                     503 	.db	00111$
      00009Br7B                     504 	.db	00111$
      00009Cr7B                     505 	.db	00111$
      00009Dr7B                     506 	.db	00111$
      00009ErC4                     507 	.db	00105$
      00009FrC9                     508 	.db	00106$
      0000A0rCE                     509 	.db	00107$
      0000A1rD3                     510 	.db	00108$
      0000A2                        511 00125$:
      0000A2s00                     512 	.db	00101$>>8
      0000A3s00                     513 	.db	00102$>>8
      0000A4s00                     514 	.db	00103$>>8
      0000A5s00                     515 	.db	00104$>>8
      0000A6s00                     516 	.db	00111$>>8
      0000A7s00                     517 	.db	00111$>>8
      0000A8s00                     518 	.db	00111$>>8
      0000A9s00                     519 	.db	00111$>>8
      0000AAs00                     520 	.db	00111$>>8
      0000ABs00                     521 	.db	00111$>>8
      0000ACs00                     522 	.db	00105$>>8
      0000ADs00                     523 	.db	00106$>>8
      0000AEs00                     524 	.db	00107$>>8
      0000AFs00                     525 	.db	00108$>>8
                                    526 ;	main.c:51: case(0):LED1=!LED1;break;
      0000B0                        527 00101$:
      0000B0 B2 A0            [12]  528 	cpl	_P2_0
      0000B2 02r00r7B         [24]  529 	ljmp	00111$
                                    530 ;	main.c:52: case(1):LED2=!LED2;break;
      0000B5                        531 00102$:
      0000B5 B2 A1            [12]  532 	cpl	_P2_1
      0000B7 02r00r7B         [24]  533 	ljmp	00111$
                                    534 ;	main.c:53: case(2):LED3=!LED3;break;
      0000BA                        535 00103$:
      0000BA B2 A2            [12]  536 	cpl	_P2_2
      0000BC 02r00r7B         [24]  537 	ljmp	00111$
                                    538 ;	main.c:54: case(3):LED4=!LED4;break;
      0000BF                        539 00104$:
      0000BF B2 A3            [12]  540 	cpl	_P2_3
      0000C1 02r00r7B         [24]  541 	ljmp	00111$
                                    542 ;	main.c:55: case(10):LED5=!LED5;break;
      0000C4                        543 00105$:
      0000C4 B2 A4            [12]  544 	cpl	_P2_4
      0000C6 02r00r7B         [24]  545 	ljmp	00111$
                                    546 ;	main.c:56: case(11):LED6=!LED6;break;
      0000C9                        547 00106$:
      0000C9 B2 A5            [12]  548 	cpl	_P2_5
      0000CB 02r00r7B         [24]  549 	ljmp	00111$
                                    550 ;	main.c:57: case(12):LED7=!LED7;break;
      0000CE                        551 00107$:
      0000CE B2 A6            [12]  552 	cpl	_P2_6
      0000D0 02r00r7B         [24]  553 	ljmp	00111$
                                    554 ;	main.c:58: case(13):LED8=!LED8;break;
      0000D3                        555 00108$:
      0000D3 B2 A7            [12]  556 	cpl	_P2_7
                                    557 ;	main.c:67: }
                                    558 ;	main.c:69: }
      0000D5 02r00r7B         [24]  559 	ljmp	00111$
                                    560 	.area CSEG    (CODE)
                                    561 	.area CONST   (CODE)
                                    562 	.area XINIT   (CODE)
                                    563 	.area CABS    (ABS,CODE)
